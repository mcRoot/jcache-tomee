/*
 * Copyright (c) Steven P. Goldsmith. All rights reserved.
 *
 * Created by Steven P. Goldsmith on September 2, 2015
 * sgoldsmith@codeferm.com
 */
package com.codeferm.jcache.tomee;

import java.io.Serializable;
import javax.cache.annotation.GeneratedCacheKey;

/**
 * A Serializable, immutable, thread-safe object that is used as a key,
 * automatically generated by a StringKeyGenerator. The implementation MUST
 * follow the Java contract for Object.hashCode() and Object.equals(Object) to
 * ensure correct behavior. It is recommended that implementations also override
 * Object.toString() and provide a human-readable string representation of the
 * key.
 *
 * @author sgoldsmith
 * @version 1.0.0
 * @since 1.0.0
 */
public class StringGeneratedCacheKey implements GeneratedCacheKey, Serializable {

    /**
     * Cached hash value.
     */
    private int cachedHash;
    /**
     * String value returned from first parameter.
     */
    private String value;

    /**
     * Default constructor.
     */
    public StringGeneratedCacheKey() {
    }

    /**
     * Constructor setting String parameter.
     *
     * @param val String parameter value.
     */
    public StringGeneratedCacheKey(final String val) {
        this.value = val;
        this.cachedHash = val.hashCode();
    }

    /**
     * Return cached hash code.
     *
     * @return Hash code.
     */
    @Override
    public final int hashCode() {
        return cachedHash;
    }

    /**
     * Overridden equals checks instance type and value.
     *
     * @param obj Object to compare to.
     * @return True if equal.
     */
    @Override
    public final boolean equals(final Object obj) {
        return StringGeneratedCacheKey.class.isInstance(obj) && value
                == StringGeneratedCacheKey.class.cast(obj).value;
    }

    /**
     * Overridden toString returns value.
     *
     * @return Value as String.
     */
    @Override
    public final String toString() {
        return value;
    }
}
